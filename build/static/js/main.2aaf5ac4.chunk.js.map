{"version":3,"sources":["components/rechercheVilles/RechercheVillesView.js","components/rechercheVilles/RechercheVillesController.js","components/MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["VillesView","props","handleChangeRecherche","event","value","currentTarget","setState","rechercheSaisi","rechercheVilles","state","villesMetropole","this","villes","className","map","ville","index","villesOutreMer","Form","FormGroup","Input","name","placeholder","innerRef","input","recherche","onChange","length","Component","Villes","isLoading","errorLoading","rechercheParNom","rechercheParCode","setRechercheVilles","chargerVilles","saisi","parseInt","charAt","axios","get","API_URL","then","response","data","catch","error","bind","Main","location","exact","path","component","to","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2aaf5ac4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, FormGroup, Input } from 'reactstrap';\r\n\r\nclass VillesView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            rechercheSaisi: \"\"\r\n        }\r\n    }\r\n\r\n    handleChangeRecherche = (event) => {\r\n        const value = event.currentTarget.value;\r\n        this.setState({ rechercheSaisi: value })\r\n        this.props.rechercheVilles(value)\r\n    }\r\n\r\n    render() {\r\n        //les villes de métropole\r\n        var villesMetropole = this.props.villes.villesMetropole === null ? null : (\r\n            <div className=\"row\">\r\n                {this.props.villes.villesMetropole.map((ville, index) =>\r\n                    <div key={index} className=\"row col-10 col-md-5 g-0 p-3 ville border\">\r\n                        <div className=\"col-sm-6 col-md-8\">{ville['nomCommune']} </div>\r\n                        <div className=\"col-6 col-md-4 text-info\">{ville['codePostal']}</div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n        // les villes d'outre mer\r\n        var villesOutreMer = this.props.villes.villesOutreMer === null ? null : (\r\n            <div className=\"row mx-auto\">\r\n                {this.props.villes.villesOutreMer.map((ville, index) =>\r\n                    <div key={index} className=\"row col-10 col-md-5 g-0 p-3 ville border\">\r\n                        <div className=\"col-sm-6 col-md-8\">{ville['nomCommune']} </div>\r\n                        <div className=\"col-6 col-md-4 text-info\">{ville['codePostal']}</div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n        return (\r\n            <div>\r\n                <Form>\r\n                    <div className=\"container\">\r\n                        <div className=\"row d-flex justify-content-center barreRecheche rounded\">\r\n                            <div className=\"col-12 col-md-3\">\r\n                                <h3>Je recherche ...</h3>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-9\">\r\n                                <FormGroup>\r\n                                    <Input value={this.state.rechercheSaisi} name=\"recherche\" placeholder=\"..Nom d'une ville, Code postal\"\r\n                                        innerRef={(input) => this.recherche = input} onChange={this.handleChangeRecherche} />\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n\r\n                <div className=\"row d-flex justify-content-center\">\r\n                    <div className=\"col-10 col-md-5 villes rounded\">\r\n                        <h3 className=\"text-center fw-bold titre\">Villes de métropole</h3>\r\n                        {\r\n                            this.props.villes.villesMetropole === null || this.props.villes.villesMetropole.length === 0 ? (\r\n                                <div className=\"alert alert-danger\">aucune ville correspondant au texte saisi</div>\r\n                            ) : (\r\n                                <div className=\"alert alert-success\">{this.props.villes.villesMetropole.length} villes correspondant au texte saisi</div>\r\n                            )\r\n                        }\r\n                        {villesMetropole}\r\n                    </div>\r\n                    <div className=\"col-10 col-md-5 villes rounded\">\r\n                        <h3 className=\"text-center fw-bold titre\">Villes d'outre-mer</h3>\r\n                        {\r\n                            this.props.villes.villesOutreMer === null || this.props.villes.villesOutreMer.length === 0 ? (\r\n                                <div className=\"alert alert-danger\">aucune ville correspondant au texte saisi</div>\r\n                            ) : (\r\n                                <div className=\"alert alert-success\">{this.props.villes.villesOutreMer.length} villes correspondant au texte saisi</div>\r\n                            )\r\n                        }\r\n                        {villesOutreMer}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default VillesView;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { API_URL } from '../../shared/apiUrl';\r\n\r\nimport VillesView from './RechercheVillesView';\r\n\r\nclass Villes extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            villesMetropole: null,\r\n            villesOutreMer: null,\r\n            isLoading: true,\r\n            errorLoading: \"\",\r\n            rechercheParNom: \"\",\r\n            rechercheParCode: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setRechercheVilles(\"\")\r\n        this.chargerVilles();\r\n    }\r\n\r\n    setRechercheVilles(saisi) {\r\n        //code postale\r\n        if (parseInt(saisi.charAt(0))) {\r\n            this.setState({ rechercheParNom: \"\", rechercheParCode: saisi }, () => this.chargerVilles())\r\n        }\r\n        // nom ville\r\n        else {\r\n            this.setState({ rechercheParNom: saisi, rechercheParCode: \"\" }, () => this.chargerVilles())\r\n        }\r\n    }\r\n\r\n    chargerVilles() {\r\n        if (this.state.rechercheParNom !== \"\" || this.state.rechercheParCode !== \"\") {\r\n            axios.get(API_URL + \"/villes/findByFilter?name=\" + this.state.rechercheParNom + \"&code=\" + this.state.rechercheParCode).then(response => {\r\n                this.setState({ isLoading: false, villesMetropole: response.data[\"metropole\"], villesOutreMer: response.data[\"outreMer\"], errorLoading: \"\" })\r\n            }).catch(error => {\r\n                this.setState({ isLoading: false, errorLoading: \"Il y a une erreur dans le Chargement veuillez réessayer \" })\r\n            })\r\n        } else {\r\n            this.setState({ isLoading: false, villesMetropole: null, villesOutreMer: null, errorLoading: \"\" })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <VillesView villes={this.state} rechercheVilles={this.setRechercheVilles.bind(this)} />\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Villes;","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Villes from './rechercheVilles/RechercheVillesController';\r\n\r\nexport default function Main(props) {\r\n    function listeVilles() {\r\n        return (\r\n            <Villes />\r\n        );\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"contaner\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <Switch location={props.location}>\r\n                            <Route exact path='/' component={() => listeVilles()} />\r\n                            <Redirect to=\"/\" />\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n","import Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './App.css';\n\nfunction App() {\n  return(\n    <BrowserRouter>\n        <div className=\"App\">\n              <Main />\n        </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // importation bootstrap\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}